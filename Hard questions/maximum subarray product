// maximum subarray product 

#include <iostream>
using namespace std;

class Solution {
public:
    int maxProduct(int nums[], int n) {
        if (n == 0) return 0;
        
        int maxProd = nums[0];
        int minProd = nums[0];
        int result = nums[0];
        
        for (int i = 1; i < n; i++) {
            if (nums[i] < 0) {
                int temp = maxProd;
                maxProd = minProd;
                minProd = temp;
            }
            
            if (nums[i] > maxProd * nums[i]) maxProd = nums[i];
            else maxProd = maxProd * nums[i];
            
            if (nums[i] < minProd * nums[i]) minProd = nums[i];
            else minProd = minProd * nums[i];
            
            if (maxProd > result) result = maxProd;
        }
        
        return result;
    }
};

int main() {
    int n;
    cout << "Enter the number of elements: ";
    cin >> n;
    
    int nums[n];
    cout << "Enter the elements: ";
    for (int i = 0; i < n; i++) {
        cin >> nums[i];
    }
    
    Solution solution;
    int result = solution.maxProduct(nums, n);
    cout << "Maximum product subarray: " << result << endl;
    
    return 0;
}
